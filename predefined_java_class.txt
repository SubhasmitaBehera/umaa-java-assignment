String class
-----------------
1.package name:java.lang
2.fully Qualified class name:java.lang.String
3.static method:valueOf()
4.Non-static(instance)method:indexOf()
5.Web API link:
https://docs.oracle.com/javase/7/docs/api/java/lang/String.html

Integer class
-------------------
1.package name:- java.lang
2.fully Qualified class name:- java.lang.Integer
3.static method:- compare(int x,int y) ,bitCout(int i) ,decode(String nm)
4.Non-static(instance)method:- compareTo(Integer anotherInteger) ,doubleValue() ,equals(Object obj)
5.Web API link:- https://docs.oracle.com/javase/7/docs/api/java/lang/Integer.html

Byte class
----------------
1.package name:- java.lang
2.fully Qualified class name:- java.lang.Byte
3.static method:- compare(byte x, byte y) ,decode(String nm) ,	parseByte(String s)
4.Non-static(instance)method:- compareTo(Byte anotherByte) ,doubleValue()
5.Web API link:- https://docs.oracle.com/javase/7/docs/api/java/lang/Byte.html
-

Boolean class
-----------------
1.package name:- java.lang
2.fully Qualified class name:- java.lang.Boolean
3.static method:- compare(boolean x, boolean y) , getBoolean(String name)
4.Non-static(instance)method:- 	compareTo(Boolean b) ,hashCode()
5.Web API link:- https://docs.oracle.com/javase/7/docs/api/java/lang/Boolean.html

Short class
------------------
1.package name:- java.lang
2.fully Qualified class name:- java.lang.Short
3.static method:- compare(short x, short y) , decode(String nm)
4.Non-static(instance)method:- compareTo(Short anotherShort) , 	doubleValue()
5.Web API link:- https://docs.oracle.com/javase/7/docs/api/java/lang/Short.html

Carecter class
----------------------
1.package name:- java.lang
2.fully Qualified class name:- java.lang.Character
3.static method:- codePointAt(char[] a, int index) ,codePointAt(char[] a, int index, int limit)
4.Non-static(instance)method:- 	compareTo(Character anotherCharacter) , equals(Object obj)
5.Web API link:- https://docs.oracle.com/javase/7/docs/api/java/lang/Character.html

Long class
------------------
1.package name:- java.lang
2.fully Qualified class name:- java.lang.Long
3.static method:- compare(long x, long y) , decode(String nm)
4.Non-static(instance)method:- 	compareTo(Long anotherLong) ,
5.Web API link:- https://docs.oracle.com/javase/7/docs/api/java/lang/Long.html

Float class
------------------
1.package name:- java.lang
2.fully Qualified class name:- java.lang.Float
3.static method:- floatToIntBits(float value) , floatToRawIntBits(float value)
4.Non-static(instance)method:- doubleValue() ,	equals(Object obj)
5.Web API link:- https://docs.oracle.com/javase/7/docs/api/java/lang/Float.html

Double class
---------------------
1.package name:- java.lang
2.fully Qualified class name:- java.lang.Double
3.static method:- doubleToLongBits(double value) ,doubleToRawLongBits(double value)
4.Non-static(instance)method:- 	compareTo(Double anotherDouble) ,doubleValue()
5.Web API link:- https://docs.oracle.com/javase/7/docs/api/java/lang/Double.html

Exception class
----------------------
1.package name:- java.lang
2.fully Qualified class name:-java.lang.Exception
3.static method:
4.Non-static(instance)method:- toString()
5.Web API link:- https://docs.oracle.com/javase/7/docs/api/java/io/IOException.html

ArithmeticException class
--------------------------
1.package name:- java.lang
2.fully Qualified class name:- java.lang.ArithmeticException
3.static method:
4.Non-static(instance)method:- toString()
5.Web API link:- https://docs.oracle.com/javase/7/docs/api/java/lang/ArithmeticException.html

RuntimeException class
--------------------------
1.package name:- java.lang
2.fully Qualified class name:-java.lang.RuntimeException
3.static method:
4.Non-static(instance)method:- toString()
5.Web API link:-https://docs.oracle.com/javase/7/docs/api/java/lang/RuntimeException.html

Error
-----------
1.package name:-java.lang
2.fully Qualified class name:- java.lang.Error
3.static method:
4.Non-static(instance)method:- toString()
5.Web API link:- https://docs.oracle.com/javase/7/docs/api/java/lang/Error.html

IOException
----------------------
1.package name:- java.lang
2.fully Qualified class name:-java.lang.Exception
3.static method:
4.Non-static(instance)method:- toString()
5.Web API link:- https://docs.oracle.com/javase/7/docs/api/java/io/IOException.html

ClassNotFoundException
----------------------------
1.package name:- java.lang
2.fully Qualified class name:-java.lang.Exception
3.static method:
4.Non-static(instance)method:- 	getCause() ,getException()
5.Web API link:- https://docs.oracle.com/javase/7/docs/api/java/lang/ClassNotFoundException.html

NoClassDefError
-----------------------
1.package name:- java.lang
2.fully Qualified class name:- java.lang.NoClassDefFoundError
3.static method:
4.Non-static(instance)method:- toString()
5.Web API link:- https://docs.oracle.com/javase/7/docs/api/java/lang/NoClassDefFoundError.html

Arrays
-----------
1.package name:- java.util
2.fully Qualified class name:- java.util.Arrays
3.static method:- deepToString(Object[] a) ,equals(boolean[] a, boolean[] a2)
4.Non-static(instance)method:
5.Web API link:- https://docs.oracle.com/javase/7/docs/api/java/util/Arrays.html

ArrayList
-------------
1.package name:- java.util
2.fully Qualified class name:- java.util.ArrayList<E>
3.static method:
4.Non-static(instance)method:- addAll(int index, Collection<? extends E> c) ,contains(Object o)
5.Web API link:-https://docs.oracle.com/javase/7/docs/api/java/util/ArrayList.html

Collections
-------------------
1.package name:- java.util
2.fully Qualified class name:- java.util.Collections
3.static method:- binarySearch(List<? extends Comparable<? super T>> list, T key) ,
4.Non-static(instance)method:- toString()
5.Web API link:- https://docs.oracle.com/javase/7/docs/api/java/util/Collections.html

HashMap
----------------
1.package name:- java.util
2.fully Qualified class name:- java.util.HashMap<K,V>
3.static method:
4.Non-static(instance)method:- 	containsKey(Object key) , isEmpty()
5.Web API link:- https://docs.oracle.com/javase/7/docs/api/java/util/HashMap.html

HashSet
-----------------
1.package name:- java.util
2.fully Qualified class name:- java.util.HashSet<E>
3.static method:
4.Non-static(instance)method:- contains(Object o) ,isEmpty()
5.Web API link:- https://docs.oracle.com/javase/7/docs/api/java/util/HashSet.html

Runnable
------------------
1.package name:- java.lang
2.fully Qualified class name:
3.static method:
4.Non-static(instance)method:- 	run()
5.Web API link:- https://docs.oracle.com/javase/7/docs/api/java/lang/Runnable.html

Callable
-----------------------
1.package name:- java.util.concurrent
2.fully Qualified class name:
3.static method:
4.Non-static(instance)method:- call()
5.Web API link:- https://docs.oracle.com/javase/7/docs/api/java/util/concurrent/Callable.html

Comparator
--------------------
1.package name:- java.util
2.fully Qualified class name:
3.static method:
4.Non-static(instance)method:- equals(Object obj),equals(Object obj)
5.Web API link:-https://docs.oracle.com/javase/7/docs/api/java/util/Comparator.html

Comparable
------------------------
1.package name:- java.lang
2.fully Qualified class name:
3.static method:
4.Non-static(instance)method:- compareTo(T o)
5.Web API link:- https://docs.oracle.com/javase/7/docs/api/java/lang/Comparable.html

Collection
---------------------
1.package name:- java.util
2.fully Qualified class name:
3.static method:
4.Non-static(instance)method:- addAll(Collection<? extends E> c) ,equals(Object o)
5.Web API link:- https://docs.oracle.com/javase/7/docs/api/java/util/Collection.html

